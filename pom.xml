<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lncwwn</groupId>
  <artifactId>unicorn</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>unicorn Maven Webapp</name>
  <description>the purpose of this project is to learn how to create spring web application</description>
  <url>http://maven.apache.org</url>

  <properties>
    <spring.version>3.2.12.RELEASE</spring.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.7.4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
      <version>1.5.3</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.34</version>
    </dependency>
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.3</version>
    </dependency>

    <!-- both the following two packages, quartz and cron4j, have capability of timed task scheduling -->
    <!-- choose one of them according to your requirements -->
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>2.2.1</version>
    </dependency>
    <!-- I chose quartz here -->
    <!--<dependency>-->
      <!--<groupId>it.sauronsoftware.cron4j</groupId>-->
      <!--<artifactId>cron4j</artifactId>-->
      <!--<version>2.2.5</version>-->
    <!--</dependency>-->

    <!-- you can also include some local jars as maven dependencies -->
    <!-- local dependencies start -->
    <!--<dependency>-->
      <!--<groupId>org.apache.axis</groupId>-->
      <!--<artifactId>axis</artifactId>-->
      <!--<version>1.4</version>-->
      <!--<scope>system</scope>-->
      <!--<systemPath>${project.basedir}/src/main/resources/lib/axis.jar</systemPath>-->
    <!--</dependency>-->
    <!-- local dependencies ended -->
    <dependency>
      <groupId>org.apache</groupId>
      <artifactId>lucence-core</artifactId>
      <version>4.10.3</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/src/main/lib/lucene-core-4.10.3.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>org.apache</groupId>
      <artifactId>lucence-analyzers</artifactId>
      <version>4.10.3</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/src/main/lib/lucene-analyzers-common-4.10.3.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>org.apache</groupId>
      <artifactId>lucence-queries</artifactId>
      <version>4.10.3</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/src/main/lib/lucene-queries-4.10.3.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>unicorn</finalName>
    <plugins>

      <!-- add this plugin to install the local dependencies
       into WEB-INF/lib folder when packing project to war,
        if not, the server will throw errors when running project war -->
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-war-plugin</artifactId>-->
        <!--<version>2.1.1</version>-->
        <!--<configuration>-->
          <!--<webResources>-->
            <!--<resource>-->
              <!--<directory>${project.basedir}/src/main/resources/lib</directory>-->
              <!--<targetPath>WEB-INF/lib</targetPath>-->
              <!--<filtering>false</filtering>-->
              <!--<includes>-->
                <!--<include>**/*.jar</include>-->
              <!--</includes>-->
            <!--</resource>-->
          <!--</webResources>-->
        <!--</configuration>-->
      <!--</plugin>-->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.2.2.v20140723</version>
        <configuration>
          <httpConnector>
            <port>8888</port>
          </httpConnector>
          <!--<webAppConfig>-->
          <!--<allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>-->
          <!--</webAppConfig>-->
          <webApp>
          <contextPath>/${project.build.finalName}</contextPath>
          </webApp>
          <!--<webAppSourceDirectory>${project.build.directory}/sms</webAppSourceDirectory>-->
          <!--<classesDirectory>${project.build.directory}/classes</classesDirectory>-->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <url>localhost:10080</url>
          <port>10080</port>
          <server>tomcat7</server>
          <path>/${project.build.finalName}</path>
          <uriEncoding>utf-8</uriEncoding>
          <charset>utf-8</charset>
          <useBodyEncodingForURI>true</useBodyEncodingForURI>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
